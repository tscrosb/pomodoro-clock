{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useState","React","useEffect","useRef","iconStyle","cursor","LengthComponent","title","updateTime","type","time","formatTime","className","id","style","onClick","App","display","setDisplay","breakLength","setBreakLength","sessionLength","setSessionLength","timerOn","setTimerOn","onBreak","setOnBreak","player","breakSound","console","log","currentTime","play","formatDisplayTime","mins","Math","floor","secs","amount","prev","Date","getTime","nextDate","onBreakVariable","interval","setInterval","localStorage","clear","setItem","clearInterval","getItem","pause","ref","t","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3a17281.chunk.js","sourcesContent":["import React from \"react\";\nconst useState = React.useState;\nconst useEffect = React.useEffect;\nconst useRef = React.useRef;\n\nconst iconStyle = {\n  cursor: \"pointer\"\n};\n\nconst audioSrc =\n  \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\";\n\nfunction App() {\n  // const [display, setDisplay] = useState(10);\n  // const [breakLength, setBreakLength] = useState(15);\n  // const [sessionLength, setSessionLength] = useState(10);\n  const [display, setDisplay] = useState(25 * 60);\n  const [breakLength, setBreakLength] = useState(5 * 60);\n  const [sessionLength, setSessionLength] = useState(25 * 60);\n  const [timerOn, setTimerOn] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n\n  let player = useRef(null);\n\n  useEffect(() => {\n    if (display <= 0) {\n      setOnBreak(true);\n      breakSound();\n    } else if (!timerOn && display === breakLength) {\n      setOnBreak(false);\n    }\n    console.log(\"test\");\n  }, [display, onBreak, timerOn, breakLength, sessionLength]);\n\n  const breakSound = () => {\n    player.currentTime = 0;\n    player.play();\n  };\n\n  const formatDisplayTime = time => {\n    let mins = Math.floor(time / 60);\n    let secs = time % 60;\n    return (\n      (mins < 10 ? \"0\" + mins : mins) + \":\" + (secs < 10 ? \"0\" + secs : secs)\n    );\n  };\n\n  const formatTime = time => {\n    return time / 60;\n  };\n\n  const updateTime = (amount, type) => {\n    if (type === \"break\") {\n      if ((breakLength <= 60 && amount < 0) || breakLength >= 60 * 60) {\n        return;\n      }\n      setBreakLength(prev => prev + amount);\n    } else {\n      if ((sessionLength <= 60 && amount < 0) || sessionLength >= 60 * 60) {\n        return;\n      }\n      setSessionLength(prev => prev + amount);\n      if (!timerOn) {\n        setDisplay(sessionLength + amount);\n      }\n    }\n  };\n\n  const timeControl = () => {\n    let second = 1000;\n    let date = new Date().getTime();\n    let nextDate = new Date().getTime() + second;\n    let onBreakVariable = onBreak;\n\n    if (!timerOn) {\n      let interval = setInterval(() => {\n        date = new Date().getTime();\n        if (date > nextDate) {\n          setDisplay(prev => {\n            if (prev <= 0 && !onBreakVariable) {\n              // breakSound();\n              onBreakVariable = true;\n              return breakLength;\n            } else if (prev <= 0 && onBreakVariable) {\n              // breakSound();\n              onBreakVariable = false;\n              setOnBreak(false);\n              return sessionLength;\n            }\n            return prev - 1;\n          });\n          nextDate += second;\n        }\n      }, 30);\n      localStorage.clear();\n      localStorage.setItem(\"interval-id\", interval);\n    }\n    if (timerOn) {\n      clearInterval(localStorage.getItem(\"interval-id\"));\n    }\n    setTimerOn(!timerOn);\n  };\n\n  const resetTime = () => {\n    clearInterval(localStorage.getItem(\"interval-id\"));\n    setDisplay(25 * 60);\n    setBreakLength(5 * 60);\n    setSessionLength(25 * 60);\n    player.pause();\n    player.currentTime = 0;\n    setTimerOn(false);\n    setOnBreak(false);\n  };\n\n  return (\n    <div className=\"container App\">\n      <div className=\"row\">\n        <h1 className=\"title display-3 mb-5 col-md-12 text-center\">\n          Pomodoro Clock\n        </h1>\n      </div>\n\n      <div className=\"row double d-flex\">\n        <LengthComponent\n          title={\"Break Length\"}\n          updateTime={updateTime}\n          time={breakLength}\n          formatTime={formatTime}\n          type={\"break\"}\n          formatDisplayTime={formatDisplayTime}\n        />\n        <LengthComponent\n          title={\"Session Length\"}\n          updateTime={updateTime}\n          time={sessionLength}\n          formatTime={formatTime}\n          type={\"session\"}\n          formatDisplayTime={formatDisplayTime}\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"clock col-md-12 d-flex justify-content-center\">\n          <div className={timerOn ? \"box-active mt-5\" : \"null mt-5\"}>\n            <span className={timerOn ? null : \"box2\"}></span>\n            <h2 className=\"text-center disply-4\" id=\"timer-label\">\n              {onBreak ? \"Break\" : \"Session\"}\n            </h2>\n            <h1 className=\"timer display-1 text-center\" id=\"time-left\">\n              {formatDisplayTime(display)}\n            </h1>\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"buttons d-flex justify-content-center align-content-center mt-3\">\n            <span id=\"start_stop\" onClick={timeControl}>\n              {timerOn ? (\n                <i className=\"fas fa-pause fa-4x m-3\" style={iconStyle}></i>\n              ) : (\n                <i\n                  className=\"fas fa-play fa-4x m-3\"\n                  style={iconStyle}\n                  id=\"start_stop\"\n                ></i>\n              )}\n            </span>\n            <i\n              className=\"fas fa-sync-alt fa-4x m-3\"\n              style={iconStyle}\n              id=\"reset\"\n              onClick={resetTime}\n            ></i>\n          </div>\n        </div>\n      </div>\n      <audio ref={t => (player = t)} src={audioSrc} id=\"beep\" />\n    </div>\n  );\n}\n\nfunction LengthComponent({ title, updateTime, type, time, formatTime }) {\n  return (\n    <div className=\"col-md-6\">\n      <h1\n        className=\"text-center\"\n        id={type === \"break\" ? \"break-label\" : \"session-label\"}\n      >\n        {title}\n      </h1>\n      <div className=\"d-flex justify-content-center align-items-center\">\n        <div className=\"arrow\">\n          <i\n            className=\"fas fa-arrow-circle-up fa-4x\"\n            id={type === \"break\" ? \"break-increment\" : \"session-increment\"}\n            style={iconStyle}\n            onClick={() => updateTime(60, type)}\n          ></i>\n        </div>\n        <h3\n          className=\"m-5 display-4\"\n          id={type === \"break\" ? \"break-length\" : \"session-length\"}\n        >\n          {formatTime(time)}\n        </h3>\n        <div className=\"arrow\">\n          <i\n            className=\"fas fa-arrow-circle-down fa-4x\"\n            id={type === \"break\" ? \"break-decrement\" : \"session-decrement\"}\n            style={iconStyle}\n            onClick={() => updateTime(-60, type)}\n          ></i>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}